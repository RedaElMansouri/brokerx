name: CI/CD

on:
  push:
    branches: [ main ]
    tags:
      - 'v*.*.*'
  pull_request:
    branches: [ main ]
  workflow_dispatch: {}

permissions:
  contents: read

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_DB: brokerx_test
          POSTGRES_USER: brokerx
          POSTGRES_PASSWORD: brokerxpass
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U brokerx -d brokerx_test"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      RAILS_ENV: test
      DATABASE_HOST: 127.0.0.1
      DATABASE_PORT: 5432
      DATABASE_USERNAME: brokerx
      DATABASE_PASSWORD: brokerxpass
      POSTGRES_DB: brokerx_test

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2.2'
          bundler-cache: true

      - name: Install system deps
        run: sudo apt-get update && sudo apt-get install -y libpq-dev

      - name: Set up Node (optional)
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install JS deps (if any)
        run: |
          if [ -f package.json ]; then
            corepack enable || true
            yarn install --frozen-lockfile || true
          fi

      - name: Prepare database
        run: |
          bundle exec rails db:prepare

      - name: Run tests
        run: |
          if [ -d spec ]; then
            bundle exec rspec
          else
            bundle exec rails test
          fi

      - name: RuboCop (non-blocking)
        run: |
          if bundle exec rubocop -v >/dev/null 2>&1; then
            bundle exec rubocop || true
          fi

  

  deploy-ssh:
    name: Deploy over SSH (no registry)
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push'
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-deploy
      cancel-in-progress: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Upload repository to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          source: "."
          target: "/opt/brokerx"

      - name: Remote compose up (build and start)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            set -e
            sudo mkdir -p /opt/brokerx
            sudo chown -R "$USER" /opt/brokerx
            cd /opt/brokerx
            docker compose down --remove-orphans || true
            docker compose up -d --build

  